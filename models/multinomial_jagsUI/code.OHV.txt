
    
    model{
   
     for(i in 1:N){
        
        trend[i,1:3]~dmulti(p[i,1:3],1) #likelihood
        
        #process model
        
        #Increasae
        log(p0[i,1]) <- alphaA[CHANGE[i]] + alpha[1] * start_s[i] + gridRE[GRID[i]] 
        
        #Stable
        log(p0[i,2]) <- betaB[CHANGE[i]] + beta[1] * start_s[i] + gridRE[GRID[i]]
        
        #Decrease
        log(p0[i,3]) <- gammaC[CHANGE[i]] + gamma[1] * start_s[i] + gridRE[GRID[i]]  
        
        for(j in 1:3){
        p[i,j]<-p0[i,j]/sum(p0[i, ])
        }

   }

# #derived parameters
# log(p1_C1) <- (alpha[1] * C1_start_mean) + alphaA[1]
# log(p1_C2) <- (alpha[1] * C2_start_mean) + alphaA[2]
# log(p1_C3) <- (alpha[1] * C3_start_mean) + alphaA[3]
# 
# log(p2_C1) <- (beta[1] * C1_start_mean) + betaB[1]
# log(p2_C2) <- (beta[1] * C2_start_mean) + betaB[2]
# log(p2_C3) <- (beta[1] * C3_start_mean) + betaB[3]
# 
# log(p3_C1) <- (gamma[1] * C1_start_mean) + gammaC[1]
# log(p3_C2) <- (gamma[1] * C2_start_mean) + gammaC[2]
# log(p3_C3) <- (gamma[1] * C3_start_mean) + gammaC[3]
# 
# # Adding the probabilities for all trends for each change class
# sum_p_C1 <- sum(p1_C1, p2_C1, p3_C1)
# sum_p_C2 <- sum(p1_C2, p2_C2, p3_C2)
# sum_p_C3 <- sum(p1_C3, p2_C3, p3_C3)
# 
# # Normalizing probabilities for each trend for each change class
# #Increase
# p1_C1_prob <- p1_C1/sum_p_C1
# p2_C1_prob <- p2_C1/sum_p_C1
# p3_C1_prob <- p3_C1/sum_p_C1
# 
# #Stable
# p1_C2_prob <- p1_C2/sum_p_C2
# p2_C2_prob <- p2_C2/sum_p_C2
# p3_C2_prob <- p3_C2/sum_p_C2
# 
# #Decrease
# p1_C3_prob <- p1_C3/sum_p_C3
# p2_C3_prob <- p2_C3/sum_p_C3
# p3_C3_prob <- p3_C3/sum_p_C3



#priors
alpha~dnorm(0,0.0001)
beta~dnorm(0,0.0001)
gamma~dnorm(0,0.0001)

for(i in 1:3){ ## the fixed effect of start year
  alphaA[i]~dnorm(0,1)
  betaB[i]~dnorm(0,1)
  gammaC[i]~dnorm(0,1)
} 

# # Hyperparameters for the fixed effect
# A~dnorm(0,0.0001)
# B~dnorm(0,0.0001)
# C~dnorm(0,0.0001)

#priors for RE of grid cell id

gridRE.sd ~ dgamma(0.1, 0.1)
gridRE.prec <- pow(gridRE.sd, -2)
for(i in 1:nTiles){
  gridRE[i] ~ dnorm(0, gridRE.prec)
}

# for(i in 1:nTiles){ 
#   gridRE[i]~dnorm(0,tau) #Random effects
# } 

#variance for random effect and for hyper parameters for the fixed effect of tenure type
# tau~dgamma(0.0001,0.0001)
# Atau~dgamma(0.0001,0.0001)
# Btau~dgamma(0.0001,0.0001)
# Ctau~dgamma(0.0001,0.0001)

}